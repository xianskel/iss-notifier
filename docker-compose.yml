version: "3.2"
services:
  rabbitmq-server:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq-server"
    ports:
        - "15672:15672"
        - "5672:5672"

  api-gateway:
    build: ./api-gateway
    ports:
        - "8080:8080"
    environment:
        - ISS_HOST=iss-service
        - SUB_HOST=subscription-service
    labels:
      collect_logs_with_filebeat: "true"

  iss-service:
    build: ./iss-service
    depends_on:
        - rabbitmq-server
    ports:
        - "8081:8081"
    environment:
        - AMQP_HOST=rabbitmq-server
    labels:
      collect_logs_with_filebeat: "true"
      
  subscription-service:
    build: ./subscription-service
    depends_on:
        - rabbitmq-server
        - mongo
    ports:
        - "8082:8082" 
    environment:
      - MONGO_DB_URI=mongodb://mongo:27017/subscription-service 
      - AMQP_HOST=rabbitmq-server
      - SCHEDULE='* /5 * * *'
    labels:
      collect_logs_with_filebeat: "true"

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - "mongodata:/data/db"

  notification-service:
    build: ./notification-service
    depends_on:
        - rabbitmq-server
    ports:
        - "8083:8083"
    environment:
        - AMQP_HOST=rabbitmq-server
    labels:
      collect_logs_with_filebeat: "true"

  # front-end:
  #   build: ./react-frontend
  #   stdin_open: true
  #   tty: true
  #   ports: 
  #       - "3000:3000"
  
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
  #   container_name: elasticsearch
  #   environment:
  #     - node.name=elasticsearch
  #     - discovery.seed_hosts=elasticsearch
  #     - cluster.initial_master_nodes=elasticsearch
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - logger.level=info
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elasticdata:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   depends_on:
  #     - mongo

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.1.1
  #   container_name: kibana
  #   environment:
  #     ELASTICSEARCH_URL: "http://elasticsearch:9200"
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch

  # logstash:
  #    container_name: logstash
  #    build: ./elastic-stack/logstash
  #    volumes:
  #      - ./elastic-stack/logstash/config.yml:/usr/share/logstash/config/logstash.yml
  #      - ./elastic-stack/logstash/pipeline:/usr/share/logstash/pipeline
  #    ports:
  #      - "5044:5044"
  #    depends_on:
  #      - elasticsearch

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.1.1
  #   volumes:
  #     - ./elastic-stack/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro   
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro   
  #     - /var/run/docker.sock:/var/run/docker.sock:ro          
  #     - filebeatdata:/usr/share/filebeat/data:rw                      
  #   user: root                                                            
  #   restart: on-failure
  #   depends_on:
  #     - logstash
  #     - api-gateway

volumes:
  elasticdata:
    driver: local
  mongodata:
    driver: local
  filebeatdata:
    driver: local